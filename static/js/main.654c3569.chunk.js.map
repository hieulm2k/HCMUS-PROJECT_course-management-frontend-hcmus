{"version":3,"sources":["components/Course.js","services/base-http.service.js","services/courses.service.js","components/ErrorMessage.js","components/CreateCourseDialog.js","pages/CoursesPage.js","App.js","reportWebVitals.js","index.js"],"names":["CardContainer","styled","div","CardTitle","h1","Course","name","description","section","subject","room","Card","CardContent","Typography","variant","BASE_URL","process","get","endpoint","a","options","axios","catch","error","_handleHttpError","post","data","response","statusCode","fetchCourses","createCourse","ErrorContainer","ErrorHeading","ErrorList","ul","ErrorMessage","message","Array","isArray","errors","constraints","map","constraint","idx","renderMessageArray","CreateCourseDialog","courses","setCourses","open","setOpen","useState","setName","setDescription","setSection","setSubject","setRoom","errorMessage","setErrorMessage","handleClose","handleSubmitCourse","res","newCourses","Dialog","onClose","DialogTitle","DialogContent","length","TextField","autoFocus","fullWidth","label","placeholder","margin","onChange","e","target","value","multiline","rows","DialogActions","Button","onClick","color","CoursesWrapper","CoursesHeader","Title","CreateButtonContainer","CoursesContainer","EmptyCoursesPlaceholder","p","CoursesPage","useEffect","console","log","getCourses","Fab","course","id","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.654c3569.chunk.js","sourcesContent":["import React from \"react\";\nimport { Card, CardContent, Typography } from \"@material-ui/core\";\nimport styled from \"styled-components\";\n\nconst CardContainer = styled.div`\n  margin-bottom: 20px;\n`;\n\nconst CardTitle = styled.h1`\n  margin: 8px 0;\n  font-size: 22px;\n`;\n\nconst Course = ({ name, description, section, subject, room }) => {\n  return (\n    <CardContainer>\n      <Card>\n        <CardContent>\n          <CardTitle>{name}</CardTitle>\n          <Typography>\n            {description}\n          </Typography>\n          <Typography variant=\"body2\">\n            {section}\n          </Typography>\n          <Typography variant=\"body2\">\n            {subject}\n          </Typography>\n          <Typography variant=\"body2\">\n            {room}\n          </Typography>\n        </CardContent>\n      </Card>\n    </CardContainer>\n  );\n};\n\nexport default Course;\n","import axios from 'axios';\n\nconst BASE_URL = process.env.REACT_APP_BASE_URL || 'http://localhost:3000';\n\nexport const get = async (endpoint, options = {}) => {\n  return await axios.get(`${BASE_URL}/${endpoint}`, options)\n    .catch(error => _handleHttpError(error));\n}\n\nexport const post = async (endpoint, data = {}, options = {}) => {\n  return await axios.post(`${BASE_URL}/${endpoint}`, data, options)\n    .catch(error => _handleHttpError(error));\n}\n\nexport const _handleHttpError = error => {\n  const { statusCode } = error.response.data;\n\n  if (statusCode !== 401) {\n    throw error;\n  }\n}\n","import { get, post } from \"./base-http.service\";\n\nexport const fetchCourses = async () => {\n  return await get('api/courses');\n}\n\nexport const createCourse = async (name, description, section, subject, room) => {\n  return await post(`api/courses`, { name, description, section, subject, room });\n}\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst ErrorContainer = styled.div`\n  width: 100%;\n  padding: 8px 16px;\n  background-color: #f7c5c0;\n  color: #a51809;\n  box-sizing: border-box;\n  margin-bottom: 10px;\n`;\n\nconst ErrorHeading = styled.h1`\n  font-size: 18px;\n  margin: 10px 0;\n`;\n\nconst ErrorList = styled.ul`\n  padding-left: 20px;\n`;\n\nconst ErrorMessage = ({ message }) => {\n  const renderMessageArray = errors => {\n    const constraints = errors.map((constraint, idx) => <li key={idx}>{constraint}</li>);\n\n    return <ErrorList>{constraints}</ErrorList>;\n  };\n\n  return (\n    <ErrorContainer>\n      <ErrorHeading>Oops!</ErrorHeading>\n      {Array.isArray(message) ? renderMessageArray(message) : <p>{message}</p>}\n    </ErrorContainer>\n  );\n\n}\n\nexport default ErrorMessage","import React, { useState } from \"react\"\nimport {\n    Dialog,\n    DialogContent,\n    DialogTitle,\n    TextField,\n    DialogActions,\n    Button\n} from \"@material-ui/core\"\nimport ErrorMessage from \"./ErrorMessage\"\nimport { createCourse } from \"../services/courses.service\"\n\nconst CreateCourseDialog = ({ courses, setCourses, open, setOpen }) => {\n    const [name, setName] = useState(\"\")\n    const [description, setDescription] = useState(\"\")\n    const [section, setSection] = useState(\"\")\n    const [subject, setSubject] = useState(\"\")\n    const [room, setRoom] = useState(\"\")\n    const [errorMessage, setErrorMessage] = useState([])\n\n    const refreshState = () => {\n        setName(\"\")\n        setDescription(\"\")\n        setSection(\"\")\n        setSubject(\"\")\n        setRoom(\"\")\n        setErrorMessage([])\n    }\n\n    const handleClose = () => {\n        setOpen(false)\n        refreshState()\n    }\n\n    const handleSubmitCourse = async () => {\n        try {\n            const res = await createCourse(name, description, section, subject, room);\n            const newCourses = [...courses, res.data]\n\n            // If successful create course\n            setErrorMessage([])\n            setCourses(newCourses)\n            handleClose()\n        } catch (error) {\n            const message = error.response.data.message;\n            setErrorMessage(message);\n        }\n    };\n\n    return (\n        <Dialog open={open} onClose={handleClose}>\n            <DialogTitle>Create a new course</DialogTitle>\n            <DialogContent>\n                <DialogContent>\n                    Provide information about the course you wish to complete.\n                </DialogContent>\n                {errorMessage.length !== 0 && <ErrorMessage message={errorMessage} />}\n                <TextField\n                    autoFocus\n                    fullWidth\n                    label=\"Name\"\n                    placeholder=\"Name\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    onChange={e => setName(e.target.value)}\n                />\n                <TextField\n                    fullWidth\n                    label=\"Description\"\n                    placeholder=\"Description\"\n                    multiline\n                    rows=\"4\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    onChange={e => setDescription(e.target.value)}\n                />\n                <TextField\n                    fullWidth\n                    label=\"Section\"\n                    placeholder=\"Section\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    onChange={e => setSection(e.target.value)}\n                />\n                <TextField\n                    fullWidth\n                    label=\"Subject\"\n                    placeholder=\"Subject\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    onChange={e => setSubject(e.target.value)}\n                />\n                <TextField\n                    fullWidth\n                    label=\"Room\"\n                    placeholder=\"Room\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    onChange={e => setRoom(e.target.value)}\n                />\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={handleClose}>Cancel</Button>\n                <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={handleSubmitCourse}\n                >\n                    Create Course\n                </Button>\n            </DialogActions>\n        </Dialog>\n    )\n}\n\nexport default CreateCourseDialog","import React, { useState, useEffect } from \"react\";\nimport { Fab } from \"@material-ui/core\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport styled from \"styled-components\";\nimport Course from \"../components/Course\";\nimport { fetchCourses } from \"../services/courses.service\";\nimport CreateCourseDialog from \"../components/CreateCourseDialog\";\n\nconst CoursesWrapper = styled.div`\n  width: 100%;\n  max-width: 860px;\n  margin: auto;\n  padding: 20px;\n  box-sizing: border-box;\n`;\n\nconst CoursesHeader = styled.div`\n  display: flex;\n  justify-content: center;\n  border-bottom: 3px solid blue;\n`;\n\nconst Title = styled.h1`\n  width: 100%;\n  color: Green;\n`;\n\nconst CreateButtonContainer = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n`;\n\nconst CoursesContainer = styled.div`\n  padding-top: 20px;\n`;\n\nconst EmptyCoursesPlaceholder = styled.p`\n  color: Red;\n  text-align: center;\n  font-size: 22px;\n`;\n\nconst CoursesPage = () => {\n  const [courses, setCourses] = useState([]);\n  const [open, setOpen] = useState(false);\n\n  const handleOpen = () => setOpen(true)\n\n  useEffect(() => {\n    const getCourses = async () => {\n      try {\n        const res = await fetchCourses()\n        setCourses(res.data)\n      } catch (error) {\n        console.log(error.message)\n      }\n    }\n    getCourses()\n  }, [])\n\n  return (\n    <CoursesWrapper>\n\n      <CreateCourseDialog courses={courses} setCourses={setCourses} open={open} setOpen={setOpen} />\n\n      <CoursesHeader>\n        <Title>Course Management App</Title>\n\n        <CreateButtonContainer>\n          <Fab\n            variant=\"extended\"\n            onClick={handleOpen}\n          >\n            <AddIcon />\n            Create Courses\n          </Fab>\n        </CreateButtonContainer>\n      </CoursesHeader>\n\n      <CoursesContainer>\n        {courses != null ? (\n          courses.map((course) => {\n            return (\n              <Course\n                key={course.id}\n                id={course.id}\n                name={course.name}\n                description={course.description}\n                section={course.section}\n                subject={course.subject}\n                room={course.room}\n              />\n            );\n          })\n        ) : (\n          <EmptyCoursesPlaceholder>\n            No courses available. Create one?\n          </EmptyCoursesPlaceholder>\n        )}\n      </CoursesContainer>\n    </CoursesWrapper>\n  );\n};\n\nexport default CoursesPage;\n","import React, { Fragment } from \"react\";\nimport \"./App.css\";\nimport CoursesPage from \"./pages/CoursesPage\";\n\nconst App = () => {\n  return (\n    <Fragment>\n      <CoursesPage />\n    </Fragment>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}